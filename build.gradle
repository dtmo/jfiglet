
//// Apply the java-library plugin to add support for Java Library

plugins {
	id 'java-library'
	id 'com.jfrog.bintray' version '1.8.5'
	id 'maven-publish'
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'

ext {
//	groovyVersion = "2.4.11"
}

allprojects {
	group = "com.github.dtmo.jfiglet"
	version = "1.0.1"

	// In this section you declare where to find the dependencies of your project
	repositories {
		// Use jcenter for resolving your dependencies.
		// You can declare any Maven/Ivy/file repository here.
		jcenter()

		//    mavenCentral()
	}
}

dependencies {
	testImplementation "junit:junit:4.4"
}

bintray {
	
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	
    publications = ['MyPublication']
    
    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = false //[Default: false] Whether to override version artifacts already published
    
    pkg {
        repo = 'maven'
        name = 'com.github.dtmo.jfiglet:jfiglet'
//        userOrg = user
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/dtmo/jfiglet'
        version {
	        name = '1.0.1'
	        desc = 'JFiglet 1.0.1'
	        released  = new Date()
	        vcsTag = '1.0.1'
			githubRepo = 'dtmo/jfiglet' //Optional Github repository
			githubReleaseNotesFile = 'README.md' //Optional Github readme file
//	        attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
			
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
	        }
            //Optional configuration for Maven Central sync of the version
            mavenCentralSync {
                sync = true
                user = project.hasProperty('sonatypeUser') ? project.property('sonatypeUser') : System.getenv('SONATYPE_USER')
                password = project.hasProperty('sonatypePassword') ? project.property('sonatypePassword') : System.getenv('SONATYPE_PASSWORD')
                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by putting 0 as value) and release the version manually.
            }            
	    }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The 3-Clause BSD License"
            url "https://opensource.org/licenses/BSD-3-Clause"
            distribution "repo"
        }
    }
	
    developers {
        developer {
            id "dtmorgan"
            name "Damian Morgan"
            email "dtmorgan@gmail.com"
        }
    }
    
    scm {
       url "https://github.com/dtmo/jfiglet"
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.github.dtmo.jfiglet'
            artifactId 'jfiglet'
            version '1.0.1'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Java FIGfont rendering API')
                root.appendNode('name', 'jfiglet')
                root.appendNode('url', 'https://github.com/dtmo/jfiglet')
                root.children().last() + pomConfig
            }
        }
    }
}
